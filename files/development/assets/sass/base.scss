@charset "UTF-8";
/* CSS Document */

// ----------------------------------------------------------
//						reset
//----------------------------------------------------------
*, html, body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, label, fieldset, input, p, blockquote, th, td {margin:0; padding:0}
table { border-collapse:collapse; border-spacing:0 }
fieldset, img { border:0 }
address, caption, cite, code, dfn, em, strong, th, var { font-style:normal; font-weight:normal }
ol, ul, li { list-style:none }
caption, th { text-align:left }
h1, h2, h3, h4, h5, h6 { font-size:100%; font-weight:normal }
q:before, q:after { content:''}

strong { font-weight:bold }
em { font-style:italic }
img { border:none }

// --------------------------------
//		clearfix
//--------------------------------
.cf:before,.cf:after {content:"";display:table;}
.cf:after {clear:both;}
.cf {*zoom:1;}


// ----------------------------------------------------------
//		variables
//----------------------------------------------------------

$side: #64401f;
$back-panel: #deba84;


$head:#223a2f;

$head-shadow: darken($head,5%);
$head-light: lighten($head,8%);

$head-deep-shadow: darken($head,10%);
$head-high-light: lighten($head,16%);

$head-white: lighten($head,50%);

$wood: #e4ceb3;
//$wood: #c59a6c;
//$wood-shadow-high: darken($wood,30%);
//$wood-shadow-low: darken($wood,50%);
$wood-shadow-high: darken($wood,60%);
$wood-shadow-low: darken($wood,60%);

$wood-deep-shadow: darken($wood,60%);
// ----------------------------------------------------------
//		Mixin
//----------------------------------------------------------

// # Vendor-prefixed CSS Property
//$use-prefix-webkit: true;
//$use-prefix-moz: true;
//$use-prefix-ms: true;
//$use-prefix-o: true;


// === cross_alpha (IE7,8) ===
@mixin cross_alpha($alpLevel) {
	$alpLevel-ie: 100;
	@if $alpLevel < 1 {								//~.9
		$alpLevel-ie: $alpLevel * 100;
	} @else if $alpLevel >= 2 and $alpLevel < 100 {	//2~99
		$alpLevel-ie: $alpLevel;
		@if $alpLevel < 10 {						//2~9
			$alpLevel: $alpLevel / 10;
		} @else if $alpLevel < 100 {				//10~99
			$alpLevel: $alpLevel / 100;
		}
	} @else {										//1,100~
			$alpLevel: 1;
	}
	filter: alpha(opacity=#{$alpLevel-ie});
	-ms-filter: alpha(opacity=#{$alpLevel-ie});
	opacity: $alpLevel;
}

$prefix-list: '', -ms-, -moz-, -webkit-;
@mixin auto-prefix($prop-name, $prop-dtl, $prop-dtl-pref:null) {
  @if $prop-dtl-pref == null {
  	@each $ap-prefix in $prefix-list {
  		#{$ap-prefix}#{$prop-name}: $prop-dtl;
  	}
  } @else {
  	@each $ap-prefix in $prefix-list {
  		#{$ap-prefix}#{$prop-name}: #{$ap-prefix}$prop-dtl-pref $prop-dtl;
  	}
  }
}

@mixin auto-pref-kf($key-name) {
	@keyframes #{$key-name} {
		@content;
	}
	@-ms-keyframes #{$key-name} {
		@content;
	}
	@-moz-keyframes #{$key-name} {
		@content;
	}
	@-webkit-keyframes #{$key-name} {
		@content;
	}
}

// white-page
@mixin white-page($rotate,$hov-rotate) {
	&:before {
		content: '';
		width: inherit;
		height: 100%;
		position: absolute;
		transform: rotateY($rotate);
		transform-origin: left;
		background: silver;
		transition: all .8s ease-out,z-index .6s ease;
	}
	> .detail {
		&:before {
			content: '';
			width: inherit;
			height: 100%;
			position: absolute;
			transform: rotateY(($rotate * 0.6));
			transform-origin: left;
			background: gray;
			transition: all .8s ease-out,z-index .6s ease;
		}
	}
	&:hover {
		&:before {
			transform: rotateY($hov-rotate);
		}
		> .detail {
			&:before {
				transform: rotateY(($hov-rotate * 0.6));
			}
		}
	}
}

// ----------------------------------------------------------
//		Extend
//----------------------------------------------------------
%ta {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}// !!!ie7 not works!!!

%kill-ta {
  text-indent: 0;
  white-space: normal;
}

%pseudo-side-panel {
	content: '';
	position: absolute;
	width: 100px;
	height: 100%;
	background: $side;
}

%pseudo-back-panel {
	content: '';
	position: absolute;
	width: 100%;
	height: 100%;
  background: darken($wood,10%);
}

.ff-stark {
  font-family: 'Stark', sans-serif;
  font-weight: 100;
}

.ff-tend {
  font-family: 'tenderness';
  font-weight: 100;
}

.ff-icon {
  font-family: 'iconfont';
  font-weight: 100;
}

.letter-press {
	text-shadow: -1px -1px 2px $head;
}

%iconfont-set {
    position: relative;
    @extend %ta;
    &:after {
      content: attr(data-icon);
      position:absolute;
      top: 50%;
      left: 50%;
      @extend %kill-ta;
      @extend .ff-icon;
      @include auto-prefix(transform,translateX(-50%) translateY(-50%));
    }
}

// ----------------------------------------------------------
//		Web fonts
//----------------------------------------------------------
@font-face {
  font-family: 'Stark';
  //src: url('../fonts/*.eot');
  src: url('../fonts/Stark.otf') format('opentype');
}
@font-face {
  font-family: 'tenderness';
  //src: url('../fonts/*.eot');
  src: url('../fonts/tenderness.otf') format('opentype');
}
@font-face {
  font-family: 'iconfont';
  src: url('../fonts/icon/CONDENSEicon.eot');
  src: url('../fonts/icon/CONDENSEicon.woff') format('woff'),
        url('../fonts/icon/CONDENSEicon.otf') format('opentype'),
        url('../fonts/icon/CONDENSEicon.ttf') format('truetype');
}

// ----------------------------------------------------------
//		Fix Prop
//----------------------------------------------------------

a {
	text-decoration: none;
	color: #000;
}